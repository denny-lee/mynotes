-----------------------------
git init
git status
git add .
git status
// git rm --cached <file>...
git commit -m ""
git log
git remote add origin https://github.com/try-git/try_git.git
git push -u origin master (-u记住参数，以后直接git push)
git pull origin master 拉代码
git diff HEAD
git diff --staged
git reset octofamily/octodog.txt
git checkout -- octocat.txt
git branch clean_up  新建一分支
git checkout clean_up	切换到这个分支
git rm '*.txt' 删除
git commit -m
git checkout master
git merge clean_up 合并clean_up到当前分支
git branch -d clean_up	清掉分支
git push



---------------------------------------
新建项目
git init
git add README.md
git commit -m "first commit"
git remote add origin https://github.com/denny-lee/knowledge_front.git
git push -u origin master
--------------------------------------
这句什么意思？
git checkout -f step-1


-----------------------------


解除state状态的文件：
git rm --cached <file>

正常提交：
建一个.gitIgnore，把排除的路径编辑好
git status
git add .
git commit -m ""
git remote -v
git push origin master

新项目：
git clone url dir

以后拉项目：
git pull url dir

解决冲突：
如果希望保留生产服务器上所做的改动,仅仅并入新配置项, 处理方法如下:

git stash
git pull
git stash pop
然后可以使用Git diff -w +文件名 来确认代码自动合并的情况.

反过来,如果希望用代码库中的文件完全覆盖本地工作版本. 方法如下:

git reset --hard
git pull
其中git reset是针对版本,如果想针对文件回退本地修改,使用
git checkout HEAD file/to/restore 

